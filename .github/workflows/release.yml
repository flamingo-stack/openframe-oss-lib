name: OpenFrame OSS Libs Release

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [feature/ci_release]
    if: github.event_name == 'push'

jobs:
  release:
    name: Build & Release
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Get Next Version
        id: version
        run: |
          # Fetch latest version from registry
          URL="https://maven.pkg.github.com/flamingo-stack/openframe-oss-lib"
          METADATA=$(curl -sf -H "Authorization: token ${{ github.token }}" \
            "$URL/com/openframe/oss/openframe-data-mongo/maven-metadata.xml" 2>/dev/null || echo "")
          
          # Extract latest version or use default
          if [ -n "$METADATA" ]; then
            LATEST=$(echo "$METADATA" | grep -oP '<version>\K[0-9]+\.[0-9]+\.[0-9]+' | sort -V | tail -1)
          fi
          LATEST=${LATEST:-1.0.0}
          
          # Increment patch version
          IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST"
          NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Version: $NEW_VERSION (previous: $LATEST)"
      
      - name: Build & Test
        run: mvn clean install -am -Dcompress --batch-mode
      
      - name: Deploy ${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          mvn versions:set -DnewVersion="${{ steps.version.outputs.version }}" -DgenerateBackupPoms=false
          mvn deploy -DskipTests -s .mvn/settings.xml
      
      - name: Deploy Latest
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          mvn versions:set -DnewVersion="latest" -DgenerateBackupPoms=false
          mvn deploy -DskipTests -s .mvn/settings.xml
