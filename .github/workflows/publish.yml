name: Publish OSS Libs to GitHub Packages

on:
  push:
    branches:
      - 'main'
      - 'fix/**'
      - 'feature/**'
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'
          server-id: github
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GH_PACKAGES_TOKEN }}
          overwrite-settings: true

      - name: Read version from POM (${revision})
        id: read-version
        run: |
          VERSION=$(mvn -q -DforceStdout help:evaluate -Dexpression=revision || true)
          if [ -z "$VERSION" ]; then VERSION=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.version); fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == refs/heads/feature/* || "${GITHUB_REF}" == refs/heads/fix/* ]]; then
            SNAPSHOT_VERSION="${VERSION}-SNAPSHOT"
            echo "SNAPSHOT_VERSION=$SNAPSHOT_VERSION" >> $GITHUB_ENV
          fi

      - name: Auto-tag main with v${VERSION}
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git fetch --tags
          if ! git rev-parse "v${VERSION}" >/dev/null 2>&1; then
            git tag -a "v${VERSION}" -m "Release v${VERSION}"
            git push origin "v${VERSION}"
          else
            echo "Tag v${VERSION} already exists, skipping"
          fi

      - name: Assert tag matches POM version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          if [ "v${VERSION}" != "${GITHUB_REF_NAME}" ]; then
            echo "Tag ${GITHUB_REF_NAME} != v${VERSION}"; exit 1;
          fi

      - name: Build / Deploy
        run: |
          if [[ "${GITHUB_REF}" == refs/heads/feature/* || "${GITHUB_REF}" == refs/heads/fix/* ]]; then
            mvn -B -ntp -DskipTests deploy
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            mvn -B -ntp -DskipTests deploy
          else
            mvn -B -ntp -DskipTests install
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}