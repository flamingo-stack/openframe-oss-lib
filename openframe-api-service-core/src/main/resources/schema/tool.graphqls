extend type Query {
    # Get all integrated tools with optional filtering
    # Returns a simple list since tools are limited in number (configuration data)
    integratedTools(filter: ToolFilterInput, search: String): ToolList!
    
    # Get available tool filters
    toolFilters: ToolFilters!
}

enum ToolUrlType {
    DASHBOARD
    API
    WS
    DATABASE
    CACHE
    BROKER
    COORDINATOR
    CONTROLLER
    SERVER
    METRICS
    LOGS
    INTERNAL
}

enum APIKeyType {
    HEADER
    BEARER_TOKEN
}

type APIKey {
    key: String!
    type: APIKeyType!
    keyName: String
}

type ToolUrl {
    url: String!
    port: String
    type: ToolUrlType!
}

type ToolCredentials {
    username: String
    password: String
    apiKey: APIKey
}

type IntegratedTool {
    id: ID!
    name: String!
    description: String
    icon: String
    toolUrls: [ToolUrl!]!
    type: String
    toolType: String
    category: String
    platformCategory: String
    enabled: Boolean!
    credentials: ToolCredentials
    
    # Layer information
    layer: String
    layerOrder: Int
    layerColor: String
    
    # Monitoring configuration
    metricsPath: String
    healthCheckEndpoint: String
    healthCheckInterval: Int
    connectionTimeout: Int
    readTimeout: Int
    allowedEndpoints: [String]
}

input ToolFilterInput {
    enabled: Boolean
    type: String
    category: String
    platformCategory: String
}

# Simple list type for tools query
# Tools are configuration data with limited quantity (10-50 items)
# No pagination or total count needed
type ToolList {
    tools: [IntegratedTool!]!
}

# Available filter options for tools
type ToolFilters {
    types: [String!]!
    categories: [String!]!
    platformCategories: [String!]!
} 