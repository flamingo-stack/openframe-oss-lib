extend type Query {
    logFilters(filter: LogFilterInput): LogFilters!

    logs(
        filter: LogFilterInput
        pagination: CursorPaginationInput
        search: String
    ): LogConnection!
    
    # Get full audit details from Cassandra when user clicks on a audit
    # Requires complete composite key for efficient Cassandra lookup
    logDetails(
        ingestDay: String!      # YYYY-MM-DD format
        toolType: String!       # Tool type (meshcentral, tactical-rmm, etc.)
        eventType: String!      # Event type (login, logout, script, etc.)
        timestamp: Instant!     # Timestamp of the audit
        toolEventId: ID!        # Tool event ID
    ): LogDetails
}

type LogFilters {
    toolTypes: [String!]!
    eventTypes: [String!]!
    severities: [String!]!
}

input LogFilterInput {
    startDate: Date        # Date scalar - single select
    endDate: Date          # Date scalar - single select
    eventTypes: [String!]  # Multiselect (not array)
    toolTypes: [String!]   # Multiselect (not array)
    severities: [String!]  # Multiselect (not array)
}

type LogConnection {
    edges: [LogEdge!]!
    pageInfo: CursorPageInfo!
}

type LogEdge {
    node: LogEvent!
    cursor: String!
}

type LogEvent {
    toolEventId: ID!
    eventType: String!
    ingestDay: String!
    toolType: String!
    severity: String!
    userId: String
    deviceId: String
    summary: String
    timestamp: Instant!
}

# Full audit details from Cassandra
type LogDetails {
    toolEventId: ID!
    eventType: String!
    ingestDay: String!
    toolType: String!
    severity: String!
    userId: String
    deviceId: String
    message: String
    timestamp: Instant!
    # Details as JSON string (converted from Map<String, String>)
    details: String
} 